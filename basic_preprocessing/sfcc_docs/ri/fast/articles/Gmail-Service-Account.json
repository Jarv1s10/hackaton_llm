{
    "site_name": "Revenue Grid Knowledge Base",
    "short_site_name": "Sfcc",
    "doc_dir": "ri/fast/articles/Gmail-Service-Account.md",
    "doc_url": "https://docs.revenuegrid.com/ri/fast/articles/Gmail-Service-Account",
    "title": null,
    "full_content": "---\ndescription: Learn how to configure and use a Gmail / Google Workspace (G Suite) Service Account for sync activation\n---\n# How to Configure and Use a Gmail / Google Workspace (G Suite) Service Account for Sync Activation  \n  \n\n<!--<i>For users of the Email Sidebar on:</i><br><br>-->\n<!--<div class=\"container\" style=\"display: inline-block; height: 42px; width: auto; padding: 5px 10px; background-color: #fff;\"><img src=\"https://smartcloudconnect.io/wp-content/uploads/2021/08/logo-Gmail.jpg\" style=\"height: 100%; object-fit: contain; vertical-align: middle;\"></div> -->\n\n&nbsp;\n\n*6 min read*  \n\n<!-- ShareThis BEGIN --> \n<div class=\"addthis_inline_share_toolbox\"></div>\n<!-- End ShareThis --> \n\n&nbsp;\n\nGmail / Google Workspace (G Suite) Service Accounts are used for various mail access management tasks, for example to mass-authorize {{ product_name }} [Sync engine](../Synchronization-Engine-An-Overview/) to work with the end users' Gmail data via [{{ short_name }} Chrome Extension for Gmail](../Gmail-Extension/).\n\nWithin this scenario, a service account configured by the local mail Admin provides a simple way to authorize multiple Gmail boxes for {{ short_name }} use, so the end users do not need to [get their mailboxes authorized manually](../How-to-Set-Up-the-Chrome-Extension-for-Salesforce-and-Gmail/), and keep it connected every time they change  their password. This makes [adding new product users](../Managing-Users-via-the-Solution-s-Admin-Panel/) easier and allows admins and Managers to ensure that all users [get all {{ product_name }} features unrolled](../Email-Integration-Full-Deployment-Scenarios/) for them.\n\nThe steps to configure Gmail / Google Workspace (G Suite) Service Account:  \n\n* [Step 1. Create a Project](../Gmail-Service-Account/#step_1_create_a_project)  \n\n* [Step 2. Enable Gmail API Sets](../Gmail-Service-Account/#step_2_enable_gmail_api_sets)  \n\n* [Step 3. Create a Service Account User](../Gmail-Service-Account/#step_3_create_a_service_account_user)  \n\n* [Step 4. Configure Google Workspace Marketspace OAuth client](../Gmail-Service-Account/#step_4_configure_google_workspace_marketspace_oauth_client)  \n\n* [Step 5. Enable the Service Account in Gmail](../Gmail-Service-Account/#step_5_enable_the_service_account_in_gmail)  \n\n* [Step 6. Set Up Domain Delegation](../Gmail-Service-Account/#step_6_set_up_domain_delegation)  \n\n* [Step 7. Use the configured service account to authorize users in {{ short_name }} Admin panel](../Gmail-Service-Account/#step_7_use_the_configured_service_account_to_authorize_users_in_rges_admin_panel)\n\n!!! tip \"Tip\"\n    After mass {{ short_name }} Sync activation via a Gmail service account, you can proceed to [mass-deploying the {{ short_name }} Chrome extensions for the end users](../Chrome-Extension-Mass-Deployment/); the mass deployment procedure is only available on Windows systems, via [MS Active Directory](https://searchwindowsserver.techtarget.com/definition/Active-Directory)\n\n&nbsp;\n\n\n<!--<iframe src=\"https://player.vimeo.com/video/458080336\" width=\"640\" height=\"360\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe>-->\n\n&nbsp;\n***\n&nbsp;\n\n## Step 1. Create a Project\n\n**1\\.1.** Log in to your Org's Gmail / Google Workspace (G Suite) Console with a Super administrator credentials at <https://console.developers.google.com/>  \n\nIf you haven't used the Console before, you will first need to agree to the Console's Terms of Service.\n\n<br>\n**1\\.2.** Click the button **Select a project \u25be** in the upper left corner of the Console\n\n![](../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g0.png)\n\n&nbsp;\n<br><br>\n**1\\.3.** In the dialog that appears, click **New Project** \n\n![](../assets/images/Configuration-%26-Settings/Admin-Settings-%26-Actions/Gmail-Service-Account/g1.png)\n &nbsp;\n<br><br>\n**1\\.4.** Enter a Project name and click **Create**. In this example we set the name *Gmail Service Account*\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g2.png\" style=\"width: 80%\">\n</p>\n\n\n&nbsp;\n\n&nbsp;\n***\n&nbsp;\n\n\n## Step 2. Enable [Gmail API Sets](https://developers.google.com/gmail/api)\n\n<br>\n**2\\.1.** Select your Project from the list and click the **ENABLE APIS AND SERVICES** button\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g3.png\" class=\"minimized\">\n</p>\n\n<br><br>\n\n **2\\.2.** On the API Library page that opens, use the search box to find **GMAIL API**, click on it and then **Enable** it on the next page.  \n \nNote that enabling the APIs here does **not** instantly grant the access, it is a prerequisite to add the corresponding permission scopes later  \n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g4.gif\" class=\"minimized\">\n</p>\n\n\n&nbsp;\n\n\n**2\\.3.** In the same manner find and enable four more [API sets](https://developers.google.com/gmail/api) for the service account:   \n\n* **Google Calendar API**\n* **Google People API**\n* **Google Drive API**\n* **Tasks API**\n\n&nbsp;\n\n&nbsp;\n***\n&nbsp;\n\n## Step 3. Create a Service Account User\n\n<br>\n**3\\.1.** Click the **\u2630** (Navigation menu) icon (1) in the upper left corner of the Console and select **IAM & admin**(2) > **Service accounts**(3) in the navigation pane\n\n![](../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g6.png)\n\n<br><br>\n\n**3\\.2.** In the next dialog, click **+ CREATE SERVICE ACCOUNT**\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g7.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n<br><br>\n**3\\.3.** Enter a name to identify the service account and fill in the **Service account description** field, then click **CREATE**\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g8.png\" style=\"width: 70%\">\n</p>\n\n&nbsp;\n<br>\n**3\\.4.** In the next section, set the value **Project** > **Owner** in the field *Select a role* and click **Continue** \n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g9.gif\"  style=\"width:70%\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**3\\.5.** Then click **DONE** in the next section\n\n&nbsp;\n<br>\n **3\\.6.** The next step, click the **\u205d** (Menu) icon in the *Actions* column of the created service account and select **Manage keys**\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g10.png\" class=\"minimized\">\n</p>\n\n<br><br>\n**3\\.7.** On the newly opened page, click **ADD KEY** and select **Create new key** from the drop-down list\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g10-1.png\" class=\"minimized\">\n</p>\n\n\n<br><br>\n**3\\.8.** Select JSON format for the key (the default one) and click **CREATE**  \n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g11.png\" style=\"width:70%\" class=\"minimized\">\n</p>\n\n\n<br><br>\n**3\\.9.** The JSON file will be automatically downloaded to your hard drive; store the Key file securely, as it unlocks access to your Gmail resources. This file will be used at a later step. Close the download notification and proceed to the next step\n\n![](../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g12.png)\n\n&nbsp;\n\n&nbsp;\n***\n&nbsp;\n\n\n## Step 4. Configure Google Workspace Marketspace OAuth client\n\n<br>\n**4\\.1.** On the same page, switch to the **DETAILS** tab\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g14.png\">\n</p>\n\n&nbsp;\n\n**4\\.2.** On the Details tab, scroll down to the **Advanced settings** subsection. Expand the section. Then copy the *Client ID* of the created service account to a text file or the clipboard to be used later\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g4-2.png\" style=\"width:80%\">\n</p>\n\n&nbsp;\n<br><br>\n**4\\.3.** Scroll down to find the section **Google Workspace Marketspace OAuth client** and click **Configure**  \n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g4-3.png\" style=\"width:80%\">\n</p>\n&nbsp;\n<br><br>\n**4\\.4.** On the OAuth consent screen page, select the **Internal** user type and click **Create**  \n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g4-4.png\" style=\"width:90%\">\n</p>\n&nbsp;\n<br><br>\n**4\\.5.** On the next page, edit the app registration information:\n\n<p style=\"margin-left:5%\">\n<b>4.5.1.</b> Fill in the app information to be showed on the consent screen:\n<ul style=\"margin-left:10%\">\n<li> Enter <b>{{ company_name }}</b> in the <i>App Name</i> field </li>\n<li> Enter <b>your organization's user support email</b> in the <i>User support email</i> field</li>\n</ul>\n</p>\n<p style=\"margin-left:10%\"><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g4-5-1.png\" style=\"width:80%\">\n</p>\n\n<br><br>\n<p style=\"margin-left:5%\">\n<b>4.5.2.</b> Under Authorised domains, \n<ul style=\"margin-left:10%\">\n<li> Click <b>ADD DOMAIN</b></li>\n<li> Enter the authorized domain address provided by <a href=\"mailto:support@revenuegrid.com\"> {{ company_name }} Support team</a> in the <i>Authorized domain 1</i> field and click <b>Add Domain</b></li>\n</ul>\n</p>\n<p style=\"margin-left:10%\"><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g4-5-2.png\" style=\"width:80%\">\n</p>\n\n<br>\n<p style=\"margin-left:5%\">  \n<br><br>\n<b>4.5.3.</b> Under Developer contact information, enter the email address of <b>your organization\u2019s admin</b> \n<p style=\"margin-left:10%\"><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g4-5-3.png\" style=\"width:80%\">\n</p>\n\n<br><br>\n<b>4.5.4.</b> Click <b>Save and Continue</b> \n</p>\n\n<br>\n**4\\.6.** On the next page, click **Add or Remove Scopes**  \n\n<br>\n**4\\.7.** In the section *\"Manually add scopes\"*, add the following coma-separated scopes in the scopes field: \n```\nhttps://www.googleapis.com/auth/gmail.readonly,  \nhttps://www.google.com/m8/feeds/,  \nhttps://www.googleapis.com/auth/calendar,  \nhttps://www.googleapis.com/auth/drive,  \nhttps://www.googleapis.com/auth/drive.appdata,  \nhttps://www.googleapis.com/auth/gmail.labels,  \nhttps://www.googleapis.com/auth/gmail.modify,  \nhttps://www.googleapis.com/auth/tasks,  \nhttps://www.googleapis.com/auth/userinfo.email,  \nhttps://www.googleapis.com/auth/gmail.compose,  \nhttps://www.googleapis.com/auth/contacts,  \nhttps://www.googleapis.com/auth/userinfo.profile\n```\n<br>\nWhen done, click **Add to Table** and **UPDATE**\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g4-7.gif\" style=\"width:80%\">\n</p>\n\n<br>\n**4\\.8.** Click **Save and Continue** to proceed \n\n<br>\n**4\\.9.** On the next page, review the information you have entered and click **Back to Dashboard**\n\n\n&nbsp;\n\n&nbsp;\n***\n&nbsp;\n\n## Step 5. Enable the Service Account in Gmail\n\n<br>\n**5\\.1.** Log in to the [Google Workspace Admin Console](https://admin.google.com/?hl=en_US)\n\n\n<br>\n **5\\.2.** On the right hand side navigation panel, click **Security**\n\n\n<br>\n**5\\.3.** Find **Access and data control** and click **API controls** \n\n\n<br>\n**5\\.4.** On the *API Controls* page that opens, click **MANAGE THIRD-PARTY APP ACCESS**\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g21.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**5\\.5.** In the \"App access control\" window that opens, click **Configure new app** and select **OAuth App Name Or Client ID** on the picklist\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g22.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**5\\.6.** Now you need to find the OAuth app to connect it. Enter the **Client ID**, a digits only line that you copied in the Step **4.2** into the *Search for app name or client ID* field and click **SEARCH**\n\n!!! tip \"Tip\"\n    If you didn't copy the Client ID, it can be retrieved in the following way: click **\u2630** (Menu) in the upper left corner of the Console window. Then select **IAM & admin** and click **Service accounts**. Once there, find the service account and click **Edit** in the Actions column menu, then copy the contents of the *Client ID* field from the account parameters page\n\n&nbsp;\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g20.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**5\\.7.** If everything was configured correctly, you will see *{{ company_name }}* (or another app name that you entered) in the results. Click **SELECT** on the right hand side\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g24.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**5\\.8.** The next step: select the checkbox next to the Client ID, then click **SELECT** in the bottom right corner of the dialog\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g25.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**5\\.9.** In the next dialog, set App access to **Trusted: Can access all Google services** and click **CONFIGURE**\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g26.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**5\\.10.** Next, you will see the list of configured API apps, including *{{ company_name }}* (or another app name you specified).\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g27.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n&nbsp;\n***\n&nbsp;\n\n## Step 6. Set Up Domain Delegation\n\n<br>\n**6\\.1.** Go back to Gmail Admin Console's **Security** tab (see the step **5\\.2.**), then go to **Access and data control** > **API controls**\n\n\n&nbsp;\n\n**6\\.2.** Click **MANAGE DOMAIN-WIDE DELEGATION** at the bottom of the page  \n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g29.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**6\\.3.** In the pane \"Domain-wide delegation\", click **Add new** API client\n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/g30.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n**6\\.4.** In the dialog \"Add a new client ID\" that appears:\n\n- enter the Client ID that you copied in the step **4.2**\n- populate the *OAuth scopes* field with the following comma-separated values:\n```\nhttps://www.googleapis.com/auth/gmail.readonly,  \nhttps://www.google.com/m8/feeds/,  \nhttps://www.googleapis.com/auth/calendar,  \nhttps://www.googleapis.com/auth/drive,  \nhttps://www.googleapis.com/auth/drive.appdata,  \nhttps://www.googleapis.com/auth/gmail.labels,  \nhttps://www.googleapis.com/auth/gmail.modify,  \nhttps://www.googleapis.com/auth/tasks,  \nhttps://www.googleapis.com/auth/userinfo.email,  \nhttps://www.googleapis.com/auth/gmail.compose,  \nhttps://www.googleapis.com/auth/contacts,  \nhttps://www.googleapis.com/auth/userinfo.profile\n```\n\n\n&nbsp;\n\n- Click **AUTHORISE**\n\n\n\n&nbsp;\n\n**6\\.3.** Hold up for 5 minutes for the configuration to be applied\n\nNow you are all set up to use the Gmail Service Account for end users authorization.\n\n&nbsp;\n\n&nbsp;\n***\n&nbsp;\n\n## Step 7. Use the configured service account to authorize users in [{{ short_name }} Admin panel](../How-to-Log-In-to-the-Admin-Panel/)\n\n<br>\nAfter you create a Gmail Service Account you must authorize the users in {{ product_name }} Admin panel.\n\nTo do that:  \n\n**7.1\\.** [Login to the Admin panel](../How-to-Log-In-to-the-Admin-Panel/) with admin credentials provided by {{ short_name }} Support team  \n\n\n**7.2\\.** Click on the [**ORGANIZATIONS** tab](../Managing-Organizations-via-the-Admin-Panel/) and select your Org  \n\n\n**7.3\\.** Open the **E-MAIL CONFIGURATION** subtab  \n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/gmail-org.png\" class=\"minimized\">\n</p>\n\n&nbsp;\n\n\n**7.4\\.** Click **Choose File** next to *Upload JSON file*, select the Private key .json file you generated at point ( **3.8** ) of the above instruction, then click **Upload**   \n\n\n**7.5\\.** Click **Save** in the upper right corner of the subtab and then click **Check Users' Google Impersonated Access** to make sure that the procedure was successful   \n\n<p><img src=\"../../assets/images/Configuration-&-Settings/Admin-Settings-&-Actions/Gmail-Service-Account/check-save.png\" class=\"minimized\">\n</p>\n\n\n&#160;\n &#160;\n\n\n\n\n<style>\n  .banners {\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .banners a.button {\n      background-color: #FFC827;\n      color: #2F3341;\n      box-shadow: 0 5px 35px rgba(146, 146, 146, 0.2);\n      padding: 20px;\n      font-family: Graphic, arial;\n      font-weight: 600;\n      line-height: 24px;\n      margin-top: -100px;\n      border-radius: 3px;\n      cursor: pointer;\n      transition: .1s;\n  }\n\n  .banners a.button:hover {\n    transform: scale(1.05);\n  }\n\n  .banners a.button a:hover,\n  .banners a.button a:visited {\n      color: #2F3341;\n  }\n\n  .banner-3 a.button {\n    margin-left: 45%;\n  }\n</style>\n\n<br>\n<div class=\"banners banner-2\">\n  <img src=\"../../assets/images/banners/banner-2.svg\" style=\"width: 100%; height: 100%;\">\n  <a class=\"button\" href=\"https://revenuegrid.com/request-demo/?utm_source=kb_rg&utm_medium=referral&utm_campaign=eac_demo&utm_content=banner\" target=\"_blank\">Book a free demo</a>\n</div>\n<br>\n",
    "text_content": "description: Learn how to configure and use a Gmail / Google Workspace (G Suite) Service Account for sync activation\nHow to Configure and Use a Gmail / Google Workspace (G Suite) Service Account for Sync Activation\n For users of the Email Sidebar on: -->\n -->\n6 min read \n \n \n \nGmail / Google Workspace (G Suite) Service Accounts are used for various mail access management tasks, for example to mass-authorize {{ product_name }} Sync engine to work with the end users' Gmail data via {{ short_name }} Chrome Extension for Gmail.\nWithin this scenario, a service account configured by the local mail Admin provides a simple way to authorize multiple Gmail boxes for {{ short_name }} use, so the end users do not need to get their mailboxes authorized manually, and keep it connected every time they change their password. This makes adding new product users easier and allows admins and Managers to ensure that all users get all {{ product_name }} features unrolled for them.\nThe steps to configure Gmail / Google Workspace (G Suite) Service Account: \nStep 1. Create a Project \nStep 2. Enable Gmail API Sets \nStep 3. Create a Service Account User \nStep 4. Configure Google Workspace Marketspace OAuth client \nStep 5. Enable the Service Account in Gmail \nStep 6. Set Up Domain Delegation \nStep 7. Use the configured service account to authorize users in {{ short_name }} Admin panel\n!!! tip \"Tip\"\n After mass {{ short_name }} Sync activation via a Gmail service account, you can proceed to mass-deploying the {{ short_name }} Chrome extensions for the end users; the mass deployment procedure is only available on Windows systems, via MS Active Directory\n -->\nStep 1. Create a Project\n1.1. Log in to your Org's Gmail / Google Workspace (G Suite) Console with a Super administrator credentials at https://console.developers.google.com/ \nIf you haven't used the Console before, you will first need to agree to the Console's Terms of Service.\n \n1.2. Click the button Select a project \u25be in the upper left corner of the Console\n \n1.3. In the dialog that appears, click New Project \n \n \n1.4. Enter a Project name and click Create. In this example we set the name Gmail Service Account\n \n \nStep 2. Enable Gmail API Sets\n \n2.1. Select your Project from the list and click the ENABLE APIS AND SERVICES button\n \n \n \n2.2. On the API Library page that opens, use the search box to find GMAIL API, click on it and then Enable it on the next page. \nNote that enabling the APIs here does not instantly grant the access, it is a prerequisite to add the corresponding permission scopes later \n \n \n2.3. In the same manner find and enable four more API sets for the service account: \nGoogle Calendar API\nGoogle People API\nGoogle Drive API\nTasks API\nStep 3. Create a Service Account User\n \n3.1. Click the \u2630 (Navigation menu) icon (1) in the upper left corner of the Console and select IAM & admin(2) > Service accounts(3) in the navigation pane\n \n3.2. In the next dialog, click + CREATE SERVICE ACCOUNT\n \n \n \n3.3. Enter a name to identify the service account and fill in the Service account description field, then click CREATE\n \n \n \n3.4. In the next section, set the value Project > Owner in the field Select a role and click Continue \n \n \n3.5. Then click DONE in the next section\n \n 3.6. The next step, click the \u205d (Menu) icon in the Actions column of the created service account and select Manage keys\n \n \n \n3.7. On the newly opened page, click ADD KEY and select Create new key from the drop-down list\n \n \n \n3.8. Select JSON format for the key (the default one) and click CREATE \n \n \n \n3.9. The JSON file will be automatically downloaded to your hard drive; store the Key file securely, as it unlocks access to your Gmail resources. This file will be used at a later step. Close the download notification and proceed to the next step\nStep 4. Configure Google Workspace Marketspace OAuth client\n \n4.1. On the same page, switch to the DETAILS tab\n \n \n4.2. On the Details tab, scroll down to the Advanced settings subsection. Expand the section. Then copy the Client ID of the created service account to a text file or the clipboard to be used later\n \n \n \n4.3. Scroll down to find the section Google Workspace Marketspace OAuth client and click Configure \n \n \n \n4.4. On the OAuth consent screen page, select the Internal user type and click Create \n \n \n \n4.5. On the next page, edit the app registration information:\n \n 4.5.1. Fill in the app information to be showed on the consent screen:\n \n Enter {{ company_name }} in the App Name field \n Enter your organization's user support email in the User support email field \n \n \n \n \n \n \n 4.5.2. Under Authorised domains, \n \n Click ADD DOMAIN \n Enter the authorized domain address provided by {{ company_name }} Support team in the Authorized domain 1 field and click Add Domain \n \n \n \n \n \n \n \n 4.5.3. Under Developer contact information, enter the email address of your organization\u2019s admin \n \n \n \n 4.5.4. Click Save and Continue \n \n \n4.6. On the next page, click Add or Remove Scopes \n \n4.7. In the section \"Manually add scopes\", add the following coma-separated scopes in the scopes field: \nhttps://www.googleapis.com/auth/gmail.readonly, \nhttps://www.google.com/m8/feeds/, \nhttps://www.googleapis.com/auth/calendar, \nhttps://www.googleapis.com/auth/drive, \nhttps://www.googleapis.com/auth/drive.appdata, \nhttps://www.googleapis.com/auth/gmail.labels, \nhttps://www.googleapis.com/auth/gmail.modify, \nhttps://www.googleapis.com/auth/tasks, \nhttps://www.googleapis.com/auth/userinfo.email, \nhttps://www.googleapis.com/auth/gmail.compose, \nhttps://www.googleapis.com/auth/contacts, \nhttps://www.googleapis.com/auth/userinfo.profile\n \nWhen done, click Add to Table and UPDATE\n \n \n \n4.8. Click Save and Continue to proceed \n \n4.9. On the next page, review the information you have entered and click Back to Dashboard\nStep 5. Enable the Service Account in Gmail\n \n5.1. Log in to the Google Workspace Admin Console\n \n 5.2. On the right hand side navigation panel, click Security\n \n5.3. Find Access and data control and click API controls \n \n5.4. On the API Controls page that opens, click MANAGE THIRD-PARTY APP ACCESS\n \n \n5.5. In the \"App access control\" window that opens, click Configure new app and select OAuth App Name Or Client ID on the picklist\n \n \n5.6. Now you need to find the OAuth app to connect it. Enter the Client ID, a digits only line that you copied in the Step 4.2 into the Search for app name or client ID field and click SEARCH\n!!! tip \"Tip\"\n If you didn't copy the Client ID, it can be retrieved in the following way: click \u2630 (Menu) in the upper left corner of the Console window. Then select IAM & admin and click Service accounts. Once there, find the service account and click Edit in the Actions column menu, then copy the contents of the Client ID field from the account parameters page\n \n \n5.7. If everything was configured correctly, you will see {{ company_name }} (or another app name that you entered) in the results. Click SELECT on the right hand side\n \n \n5.8. The next step: select the checkbox next to the Client ID, then click SELECT in the bottom right corner of the dialog\n \n \n5.9. In the next dialog, set App access to Trusted: Can access all Google services and click CONFIGURE\n \n \n5.10. Next, you will see the list of configured API apps, including {{ company_name }} (or another app name you specified).\n \n \nStep 6. Set Up Domain Delegation\n \n6.1. Go back to Gmail Admin Console's Security tab (see the step 5.2.), then go to Access and data control > API controls\n6.2. Click MANAGE DOMAIN-WIDE DELEGATION at the bottom of the page \n \n \n6.3. In the pane \"Domain-wide delegation\", click Add new API client\n \n \n6.4. In the dialog \"Add a new client ID\" that appears:\nenter the Client ID that you copied in the step 4.2\npopulate the OAuth scopes field with the following comma-separated values:\nhttps://www.googleapis.com/auth/gmail.readonly, \nhttps://www.google.com/m8/feeds/, \nhttps://www.googleapis.com/auth/calendar, \nhttps://www.googleapis.com/auth/drive, \nhttps://www.googleapis.com/auth/drive.appdata, \nhttps://www.googleapis.com/auth/gmail.labels, \nhttps://www.googleapis.com/auth/gmail.modify, \nhttps://www.googleapis.com/auth/tasks, \nhttps://www.googleapis.com/auth/userinfo.email, \nhttps://www.googleapis.com/auth/gmail.compose, \nhttps://www.googleapis.com/auth/contacts, \nhttps://www.googleapis.com/auth/userinfo.profile\nClick AUTHORISE\n6.3. Hold up for 5 minutes for the configuration to be applied\nNow you are all set up to use the Gmail Service Account for end users authorization.\nStep 7. Use the configured service account to authorize users in {{ short_name }} Admin panel\n \nAfter you create a Gmail Service Account you must authorize the users in {{ product_name }} Admin panel.\nTo do that: \n7.1. Login to the Admin panel with admin credentials provided by {{ short_name }} Support team \n7.2. Click on the ORGANIZATIONS tab and select your Org \n7.3. Open the E-MAIL CONFIGURATION subtab \n \n \n7.4. Click Choose File next to Upload JSON file, select the Private key .json file you generated at point ( 3.8 ) of the above instruction, then click Upload \n7.5. Click Save in the upper right corner of the subtab and then click Check Users' Google Impersonated Access to make sure that the procedure was successful \n \n \n&#160;\n &#160;\n \n .banners {\n text-align: center;\n display: flex;\n flex-direction: column;\n align-items: center;\n }\n .banners a.button {\n background-color: #FFC827;\n color: #2F3341;\n box-shadow: 0 5px 35px rgba(146, 146, 146, 0.2);\n padding: 20px;\n font-family: Graphic, arial;\n font-weight: 600;\n line-height: 24px;\n margin-top: -100px;\n border-radius: 3px;\n cursor: pointer;\n transition: .1s;\n }\n .banners a.button:hover {\n transform: scale(1.05);\n }\n .banners a.button a:hover,\n .banners a.button a:visited {\n color: #2F3341;\n }\n .banner-3 a.button {\n margin-left: 45%;\n }\n \n \n \n \n Book a free demo \n "
}